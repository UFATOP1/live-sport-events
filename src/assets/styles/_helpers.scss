$breakpoint-large-high: 1600px;
$breakpoint-large: 1366px; // 1280px
$breakpoint-large-low: 1024px;

$breakpoint-middle-high: 960px;
$breakpoint-middle: 872px; // 800px
$breakpoint-middle-low: 768px; // 720px

$breakpoint-small-high: 640px;
$breakpoint-small: 480px;
$breakpoint-small-low: 360px;


.responsive-map {
	position: relative;
	padding-bottom: 75%; // This is the aspect ratio
	height: 0;
	overflow: hidden;
}
.responsive-map iframe {
	position: absolute;
	top: 0;
	left: 0;
	width: 100% !important;
	height: 100% !important;
}

$separation: (
	'n': 0,
	'xxs': 2,
	'xs': 4,
	's': 10,
	'm': 16,
	'l': 24,
	'xl': 36,
	'xxl': 50
);

@each $key, $value in $separation {
	.mt-#{$key} {
		margin-top: #{$value}px !important;
	}

	.mb-#{$key} {
		margin-bottom: #{$value}px !important;
	}

	.ml-#{$key} {
		margin-left: #{$value}px !important;
	}

	.mr-#{$key} {
		margin-right: #{$value}px !important;
	}

	.mv-#{$key} {
		margin-top: #{$value}px !important;
		margin-bottom: #{$value}px !important;
	}

	.mh-#{$key} {
		margin-left: #{$value}px !important;
		margin-right: #{$value}px !important;
	}

	.pt-#{$key} {
		padding-top: #{$value}px !important;
	}

	.pb-#{$key} {
		padding-bottom: #{$value}px !important;
	}

	.pl-#{$key} {
		padding-left: #{$value}px !important;
	}

	.pr-#{$key} {
		padding-right: #{$value}px !important;
	}

	.pv-#{$key} {
		padding-top: #{$value}px !important;
		padding-bottom: #{$value}px !important;
	}

	.ph-#{$key} {
		padding-left: #{$value}px !important;
		padding-right: #{$value}px !important;
	}

	.pd-#{$key} {
		padding: #{$value}px !important;
	}
}

.mh-a {
	margin-left: auto !important;
	margin-right: auto !important;
}

.lh-n {
	line-height: normal !important;
}

$fontweight: (
	'n': 400,
	'm': 500,
	's': 600,
	'b': 700
);

@each $key, $value in $fontweight {
	.fw-#{$key} {
		font-weight: $value !important;
	}
}

$textalign: (
	'l': left,
	'c': center,
	'r': right,
	'j': justify
);

@each $key, $value in $textalign {
	.ta-#{$key} {
		text-align: $value;
	}
}

.ta-right-center {
	text-align: right;

	@media screen and (max-width: $breakpoint-small) {
		text-align: center;

		.button {
			width: 300px;
			max-width: 100%;
		}
	}
}

$verticalalign: (
	't': top,
	'tt': text-top,
	'm': middle,
	'b': bottom,
	'tb': text-bottom,
	'base': baseline,
	'sup': super,
	'sub': sub
);

@each $key, $value in $verticalalign {
	.va-#{$key} {
		vertical-align: $value;
	}
}

// TODO: need to cleanup color constants later in _variables.scss and here
$backgrounds: (
	'guest': #27B75D,
	'classic': #00ABEC,
	'premium': #9844C5,
	'platinum': #757575,
	'professional': #000,
	'black': #000, // professional
	'grey-darker': #414141,
	'grey-dark': #757575, // platinum
	'grey': #EFEFEF,
	'grey-light': #FCF8F5,
	'white': #FFF,
	'green': #27B75D, // guest
	'blue': #00ABEC, // classic
	'yellow': #FBC701,
	'purple': #9844C5 // premium
);

@each $key, $value in $backgrounds {
	.bg-#{$key} {
		background-color: $value !important;
	}
}

$textcolors: (
	'black': #000,
	'dark': #222,
	'default': #414141,
	'grey-dark': #666,
	'grey': #888,
	'grey-light': #CCC,
	'white': #FFF,
	'red': #DF3748,
	'green': #4CAF50,
	'green-light': #59d35d
);

@each $key, $value in $textcolors {
	.color-#{$key} {
		color: $value !important;
	}
}

$borders: (
	'grey': #CCC,
	'grey-light': #EFEFEF,
	'black-alpha': rgba(#000, .1),
	'white-alpha': rgba(#FFF, .2)
);

@each $key, $value in $borders {
	.bt-#{$key} {
		border-top: solid 1px $value;
	}

	.bb-#{$key} {
		border-bottom: solid 1px $value;
	}

	.brdr-#{$key} {
		border: solid 1px $value;
	}
}

.bt-none {
	border-top: none !important;
}

.bb-none {
	border-bottom: none !important;
}

.hide {
	display: none;
}

.inline {
	display: inline !important;
}

.inline-block {
	display: inline-block !important;
}

.block {
	display: block;
}

.no-overflow {
	position: relative;
	display: inline-block;
	overflow: hidden;
	max-width: 100%;
	text-overflow: ellipsis;
}

.nowrap {
	white-space: nowrap;
}

.normal-wrap {
	white-space: normal !important;
}

.cursor-pointer {
	&:hover {
		cursor: pointer;
	}
}

img {
	max-width: 100%;
}

@mixin max-width($point) {
	@media (max-width: $point) { @content ; }
}

.no-border-radius {
	@include border-radius(0);
}

.with-transparent-background {
	background-color: rgba(0,0,0,.5);
}